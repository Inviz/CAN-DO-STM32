#ifndef INC_DEV_CAN
#define INC_DEV_CAN

#ifdef __cplusplus
extern "C" {
#endif

#include "core/device.h"

/* Start of autogenerated OD types */
/* 0x6200: Transport CAN 1null */
typedef struct {
    uint32_t disabled;
    uint8_t tx_port;
    uint8_t tx_pin;
    uint8_t rx_port;
    uint8_t rx_pin;
    int16_t bitrate;
    uint16_t brp;
    uint8_t sjw;
    uint8_t prop;
    uint8_t ph_seg1;
    uint8_t ph_seg2;
} transport_can_config_t;
/* End of autogenerated OD types */

typedef struct {
    device_t *device;
    transport_can_config_t *config;
    device_t *canopen;
} transport_can_t;


extern device_callbacks_t transport_can_callbacks;

/* Start of autogenerated OD accessors */
#define SUBIDX_CAN_DISABLED 0x1
#define SUBIDX_CAN_TX_PORT 0x2
#define SUBIDX_CAN_TX_PIN 0x3
#define SUBIDX_CAN_RX_PORT 0x4
#define SUBIDX_CAN_RX_PIN 0x5
#define SUBIDX_CAN_BITRATE 0x6
#define SUBIDX_CAN_BRP 0x7
#define SUBIDX_CAN_SJW 0x8
#define SUBIDX_CAN_PROP 0x9
#define SUBIDX_CAN_PH_SEG1 0x10
#define SUBIDX_CAN_PH_SEG2 0x11

/* End of autogenerated OD accessors */

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif




#ifdef CO_CAN_INTERFACE
#ifdef STMF32F1
#if CO_CAN_RX_FIFO_INDEX == 0 || !defined(CO_CAN_RX_FIFO_INDEX)
void usb_hp_can_tx_isr(void) { CO_CANTxInterrupt(CO->CANmodule); }
void usb_lp_can_rx0_isr(void) { CO_CANRxInterrupt(CO->CANmodule); }
#else
void usb_lp_can_rx1_isr(void) { CO_CANRxInterrupt(CO->CANmodule); }
#endif
#else
#if CO_CAN_INTERFACE == CAN1
#if CO_CAN_RX_FIFO_INDEX == 0
void can1_tx_isr(void) { CO_CANTxInterrupt(CO->CANmodule); }
void can1_rx0_isr(void) { CO_CANRxInterrupt(CO->CANmodule); }
#else
void can1_rx1_isr(void) { CO_CANRxInterrupt(CO->CANmodule); }
#endif
#else
#if CO_CAN_RX_FIFO_INDEX == 0
void can2_tx_isr(void) { CO_CANTxInterrupt(CO->CANmodule); }
void can2_rx0_isr(void) { CO_CANRxInterrupt(CO->CANmodule); }
#else
void can2_rx1_isr(void) { CO_CANRxInterrupt(CO->CANmodule); }
#endif
#endif
#endif
#endif
