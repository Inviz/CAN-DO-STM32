#ifndef INC_DEV_CIRCUIT
#define INC_DEV_CIRCUIT

#ifdef __cplusplus
extern "C" {
#endif

#include "input/sensor.h"
#include "core/device.h"
#include "module/adc.h"

/* Start of autogenerated OD types */
/* 0x4000: Device Circuit 1
   A relay that turns circuit on and off, possibly using PWM. Can be paired with Hall Sensor to measure current for taking metrics via ADC. Applying current limit will turn relay into a circuit breaker. */
typedef struct device_circuit_properties {
    uint8_t parameter_count;
    uint8_t port;
    uint8_t pin;
    uint16_t limit_current;
    uint16_t limit_voltage;
    uint16_t psu_index;
    uint16_t sensor_index;
    uint8_t phase;
    uint16_t duty_cycle;
    uint16_t current;
    uint16_t voltage;
    uint8_t consumers;
} device_circuit_properties_t;
/* End of autogenerated OD types */

struct device_circuit {
    device_t *device;
    device_circuit_properties_t *properties;
    device_circuit_properties_t *properties;
    device_circuit_t *psu;
    input_sensor_t *current_sensor;
    module_adc_t *adc;;
};

extern device_methods_t device_circuit_methods;

void device_circuit_set_state(device_circuit_t *circuit, bool state);
bool_t device_circuit_get_state(device_circuit_t *circuit);

/* Start of autogenerated OD accessors */
#define SUBIDX_CIRCUIT_PORT 0x1
#define SUBIDX_CIRCUIT_PIN 0x2
#define SUBIDX_CIRCUIT_LIMIT_CURRENT 0x3
#define SUBIDX_CIRCUIT_LIMIT_VOLTAGE 0x4
#define SUBIDX_CIRCUIT_PSU_INDEX 0x5
#define SUBIDX_CIRCUIT_SENSOR_INDEX 0x6
#define SUBIDX_CIRCUIT_PHASE 0x7
#define SUBIDX_CIRCUIT_DUTY_CYCLE 0x8
#define SUBIDX_CIRCUIT_CURRENT 0x9
#define SUBIDX_CIRCUIT_VOLTAGE 0x10
#define SUBIDX_CIRCUIT_CONSUMERS 0x11

ODR_t device_circuit_set_port(device_circuit_t *circuit, uint8_t value); // 0x40XX01: circuit properties port
uint8_t device_circuit_get_port(device_circuit_t *circuit); // 0x40XX01: circuit properties port
ODR_t device_circuit_set_pin(device_circuit_t *circuit, uint8_t value); // 0x40XX02: circuit properties pin
uint8_t device_circuit_get_pin(device_circuit_t *circuit); // 0x40XX02: circuit properties pin
ODR_t device_circuit_set_limit_current(device_circuit_t *circuit, uint16_t value); // 0x40XX03: circuit properties limit_current
uint16_t device_circuit_get_limit_current(device_circuit_t *circuit); // 0x40XX03: circuit properties limit_current
ODR_t device_circuit_set_limit_voltage(device_circuit_t *circuit, uint16_t value); // 0x40XX04: circuit properties limit_voltage
uint16_t device_circuit_get_limit_voltage(device_circuit_t *circuit); // 0x40XX04: circuit properties limit_voltage
ODR_t device_circuit_set_psu_index(device_circuit_t *circuit, uint16_t value); // 0x40XX05: circuit properties psu_index
uint16_t device_circuit_get_psu_index(device_circuit_t *circuit); // 0x40XX05: circuit properties psu_index
ODR_t device_circuit_set_sensor_index(device_circuit_t *circuit, uint16_t value); // 0x40XX06: circuit properties sensor_index
uint16_t device_circuit_get_sensor_index(device_circuit_t *circuit); // 0x40XX06: circuit properties sensor_index
ODR_t device_circuit_set_phase(device_circuit_t *circuit, uint8_t value); // 0x40XX07: circuit properties phase
uint8_t device_circuit_get_phase(device_circuit_t *circuit); // 0x40XX07: circuit properties phase
ODR_t device_circuit_set_duty_cycle(device_circuit_t *circuit, uint16_t value); // 0x40XX08: circuit properties duty_cycle
uint16_t device_circuit_get_duty_cycle(device_circuit_t *circuit); // 0x40XX08: circuit properties duty_cycle
ODR_t device_circuit_set_current(device_circuit_t *circuit, uint16_t value); // 0x40XX09: circuit properties current
uint16_t device_circuit_get_current(device_circuit_t *circuit); // 0x40XX09: circuit properties current
ODR_t device_circuit_set_voltage(device_circuit_t *circuit, uint16_t value); // 0x40XX0a: circuit properties voltage
uint16_t device_circuit_get_voltage(device_circuit_t *circuit); // 0x40XX0a: circuit properties voltage
ODR_t device_circuit_set_consumers(device_circuit_t *circuit, uint8_t value); // 0x40XX0b: circuit properties consumers
uint8_t device_circuit_get_consumers(device_circuit_t *circuit); // 0x40XX0b: circuit properties consumers
/* End of autogenerated OD accessors */

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif /* objectAccessOD_H */