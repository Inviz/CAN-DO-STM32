#ifndef INC_DEV_CIRCUIT
#define INC_DEV_CIRCUIT

#ifdef __cplusplus
extern "C" {
#endif

#include "input/sensor.h"
#include "core/device.h"
#include "module/adc.h"

/* Start of autogenerated OD types */
/* 0x3800: Device Circuit 1
   A relay that turns circuit on and off, possibly using PWM. Can be paired with Hall Sensor to measure current for taking metrics via ADC. Applying current limit will turn relay into a circuit breaker. */
typedef struct {
    int16_t disabled;
    uint8_t port;
    uint8_t pin;
    uint16_t limit_current;
    uint16_t limit_voltage;
    uint16_t psu_index;
    uint16_t sensor_index;
} device_circuit_config_t;

/* 0x5800: Device Values Circuit 1
   Metrics and target values of a circuit */
typedef struct {
    int16_t duty_cycle;
    uint16_t current;
    uint16_t voltage;
    uint8_t consumers;
} device_circuit_values_t;
/* End of autogenerated OD types */

typedef struct device_circuit_t device_circuit_t;
struct device_circuit_t {
    device_t *device;
    device_circuit_config_t *config;
    device_circuit_values_t *values;
    device_circuit_t *psu;
    input_sensor_t *current_sensor;
    module_adc_t *adc;;
};

extern device_methods_t device_circuit_methods;

void device_circuit_set_state(device_circuit_t *circuit, bool state);
bool_t device_circuit_get_state(device_circuit_t *circuit);

/* Start of autogenerated OD accessors */
#define SUBIDX_CIRCUIT_DISABLED 0x1
#define SUBIDX_CIRCUIT_PORT 0x2
#define SUBIDX_CIRCUIT_PIN 0x3
#define SUBIDX_CIRCUIT_LIMIT_CURRENT 0x4
#define SUBIDX_CIRCUIT_LIMIT_VOLTAGE 0x5
#define SUBIDX_CIRCUIT_PSU_INDEX 0x6
#define SUBIDX_CIRCUIT_SENSOR_INDEX 0x7
#define SUBIDX_CIRCUIT_DUTY_CYCLE 0x1
#define SUBIDX_CIRCUIT_CURRENT 0x2
#define SUBIDX_CIRCUIT_VOLTAGE 0x3
#define SUBIDX_CIRCUIT_CONSUMERS 0x4

ODR_t device_circuit_set_duty_cycle(device_circuit_t *circuit, int16_t value); // 0x58XX01: circuit values duty_cycle
int16_t device_circuit_get_duty_cycle(device_circuit_t *circuit); // 0x58XX01: circuit values duty_cycle
ODR_t device_circuit_set_current(device_circuit_t *circuit, uint16_t value); // 0x58XX02: circuit values current
uint16_t device_circuit_get_current(device_circuit_t *circuit); // 0x58XX02: circuit values current
ODR_t device_circuit_set_voltage(device_circuit_t *circuit, uint16_t value); // 0x58XX03: circuit values voltage
uint16_t device_circuit_get_voltage(device_circuit_t *circuit); // 0x58XX03: circuit values voltage
ODR_t device_circuit_set_consumers(device_circuit_t *circuit, uint8_t value); // 0x58XX04: circuit values consumers
uint8_t device_circuit_get_consumers(device_circuit_t *circuit); // 0x58XX04: circuit values consumers
/* End of autogenerated OD accessors */

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif /* objectAccessOD_H */