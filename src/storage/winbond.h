#ifndef INC_DEV_WINBOND
#define INC_DEV_WINBOND

#ifdef __cplusplus
extern "C" {
#endif

#include "core/device.h"

#define W25_SR1_BUSY 0x01;
enum w25_commands {
    W25_CMD_MANUF_DEVICE = 0x90,
    W25_CMD_JEDEC_ID = 0x9F,
    W25_CMD_UNLOCK = 0x06,
    W25_CMD_LOCK = 0x04,
    W25_CMD_READ_SR1 = 0x05,
    W25_CMD_READ_SR2 = 0x35,
    W25_CMD_CHIP_ERASE = 0xC7,
    W25_CMD_READ_DATA = 0x03,
    W25_CMD_FAST_READ = 0x0B,
    W25_CMD_WRITE_DATA = 0x02,
    W25_CMD_READ_UID = 0x4B,
    W25_CMD_PWR_ON = 0xAB,
    W25_CMD_PWR_OFF = 0xB9,
    W25_CMD_ERA_SECTOR = 0x20,
    W25_CMD_ERA_32K = 0x52,
    W25_CMD_ERA_64K = 0xD8
};

/* Start of autogenerated OD types */
/* 0x6320: Storage Winbond
   Winbond flash storage device over SPI */
typedef struct {
    int16_t disabled;
    uint16_t spi_index;
    uint16_t page_size;
    uint16_t size;
} storage_w25_config_t;
/* End of autogenerated OD types */

typedef struct {
    device_t *device;
    storage_w25_config_t *config;
    device_t *spi;
    app_task_t task;
    app_event_t task_event;
} storage_w25_t;

extern device_methods_t storage_w25_methods;

/* Start of autogenerated OD accessors */
#define SUBIDX_WINBOND_DISABLED 0x1
#define SUBIDX_WINBOND_SPI_INDEX 0x2
#define SUBIDX_WINBOND_PAGE_SIZE 0x3
#define SUBIDX_WINBOND_SIZE 0x4

/* End of autogenerated OD accessors */

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif