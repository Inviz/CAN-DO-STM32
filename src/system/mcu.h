#ifndef INC_SYSTEM_MCU
#define INC_SYSTEM_MCU

#ifdef __cplusplus
extern "C" {
#endif

#include <libopencm3/stm32/rcc.h>
#include "core/app.h"

/* Start of autogenerated OD types */
/* 0x6000: System MCUnull */
typedef struct system_mcu_properties {
    uint8_t parameter_count;
    char family[8];
    char board_type[10];
    uint32_t storage_index;
    uint8_t phase;
    int16_t cpu_temperature;
    uint32_t startup_time; // In milliseconds 
} system_mcu_properties_t;
/* End of autogenerated OD types */

struct system_mcu {
    device_t *device;
    system_mcu_properties_t *properties;
    device_t *storage;
    const struct rcc_clock_scale *clock;
};

extern device_class_t system_mcu_class;

/* Start of autogenerated OD accessors */
typedef enum system_mcu_properties_properties {
  SYSTEM_MCU_FAMILY = 0x1,
  SYSTEM_MCU_BOARD_TYPE = 0x2,
  SYSTEM_MCU_STORAGE_INDEX = 0x3,
  SYSTEM_MCU_PHASE = 0x4,
  SYSTEM_MCU_CPU_TEMPERATURE = 0x5,
  SYSTEM_MCU_STARTUP_TIME = 0x6
} system_mcu_properties_properties_t;

#define system_mcu_set_phase(mcu, value) OD_set_u8(mcu->device->properties, SYSTEM_MCU_PHASE, value, false)
#define system_mcu_get_phase(mcu) *((uint8_t *) OD_getPtr(mcu->device->properties, SYSTEM_MCU_PHASE, 0, NULL))
#define system_mcu_set_cpu_temperature(mcu, value) OD_set_i16(mcu->device->properties, SYSTEM_MCU_CPU_TEMPERATURE, value, false)
#define system_mcu_get_cpu_temperature(mcu) *((int16_t *) OD_getPtr(mcu->device->properties, SYSTEM_MCU_CPU_TEMPERATURE, 0, NULL))
#define system_mcu_set_startup_time(mcu, value) OD_set_u32(mcu->device->properties, SYSTEM_MCU_STARTUP_TIME, value, false)
#define system_mcu_get_startup_time(mcu) *((uint32_t *) OD_getPtr(mcu->device->properties, SYSTEM_MCU_STARTUP_TIME, 0, NULL))
/* End of autogenerated OD accessors */


#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif
