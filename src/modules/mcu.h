#ifndef CO_DEV_MCU_H
#define CO_DEV_MCU_H

#ifdef __cplusplus
extern "C" {
#endif

#include "devices/devices.h"

/* Start of autogenerated OD types */
/* 0x7000: Module MCUnull */
typedef struct {
    uint32_t disabled;
    char family[8];
    char board_type[10];
    uint32_t green_led_port;
    uint32_t green_led_pin;
    uint32_t red_led_port;
    uint32_t red_led_pin;
} module_mcu_config_t;

/* 0x8000: Module Values MCU null */
typedef struct {
    int8_t cpu_temperature;
    uint64_t startup_time;
} module_mcu_values_t;
/* End of autogenerated OD types */

typedef struct {
    device_t *device;
    module_mcu_config_t *config;
} module_mcu_t;

extern device_callbacks_t module_mcu_callbacks;

/* Start of autogenerated OD accessors */
#define SUBIDX_MCU_DISABLED 0x1
#define SUBIDX_MCU_FAMILY 0x2
#define SUBIDX_MCU_BOARD_TYPE 0x3
#define SUBIDX_MCU_GREEN_LED_PORT 0x4
#define SUBIDX_MCU_GREEN_LED_PIN 0x5
#define SUBIDX_MCU_RED_LED_PORT 0x6
#define SUBIDX_MCU_RED_LED_PIN 0x7
#define SUBIDX_MCU_CPU_TEMPERATURE 0x1
#define SUBIDX_MCU_STARTUP_TIME 0x2

ODR_t module_mcu_set_cpu_temperature(module_mcu_t *mcu, int8_t value); // 0x80XX01: mcu values cpu_temperature
int8_t module_mcu_get_cpu_temperature(module_mcu_t *mcu); // 0x80XX01: mcu values cpu_temperature
ODR_t module_mcu_set_startup_time(module_mcu_t *mcu, uint64_t value); // 0x80XX02: mcu values startup_time
uint64_t module_mcu_get_startup_time(module_mcu_t *mcu); // 0x80XX02: mcu values startup_time
/* End of autogenerated OD accessors */

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif
