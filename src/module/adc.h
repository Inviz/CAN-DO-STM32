#ifndef CO_ADC_H
#define CO_ADC_H

#ifdef __cplusplus
extern "C" {
#endif

#include <devices.h>
#include <libopencm3/stm32/adc.h>
#include <libopencm3/stm32/dma.h>

#if defined(STMF1)
    #define ADC_CALIBRATION_ENABLED
    #define ADC_CALIBRATION_DELAY 100000
#else
    #define ADC_CALIBRATION_DELAY 0
#endif

#define DEVICE_ADC_MAX_CHANNELS 16

/* Start of autogenerated OD types */
/* 0x6020: undefinedundefined */
typedef struct {
    int16_t disabled;
    uint8_t interval;
    uint16_t sample_count_per_channel;
    uint8_t dma_unit;
    uint8_t dma_stream;
    uint8_t dma_channel;
} module_adc_config_t;
/* End of autogenerated OD types */


typedef struct {
    device_t *device;
    module_adc_config_t *config;

    uint32_t clock;
    uint32_t address;
    uint32_t dma_address;

    device_t *subscribers[DEVICE_ADC_MAX_CHANNELS];
    size_t channel_count;
    size_t sample_buffer_size;

    uint16_t measurements_per_second;
    uint16_t measurement_counter;
    uint8_t *channels;
    uint16_t *sample_buffer;
    uint32_t *accumulators;
    uint32_t *values;

    uint32_t startup_delay;
    
} module_adc_t;

extern device_callbacks_t module_adc_callbacks;

uint8_t module_adc_get_adc_channel(module_adc_t *adc);
uint8_t module_adc_get_adc_unit(module_adc_t *adc);
void module_adc_gpio_setup(module_adc_t *adc);
void module_adc_write(module_adc_t *adc);


void module_adc_setup(module_adc_t *adc);
void module_adc_dma_setup(module_adc_t *adc);

size_t module_adc_integrate_samples(module_adc_t *adc);
void module_adc_channels_push(module_adc_t *adc, size_t channel);
void module_adc_channels_alloc(module_adc_t *adc, size_t channel_count);
void module_adc_channels_free(module_adc_t *adc);

/* Start of autogenerated OD accessors */
#define SUBIDX_ADC_DISABLED 0x1
#define SUBIDX_ADC_INTERVAL 0x2
#define SUBIDX_ADC_SAMPLE_COUNT_PER_CHANNEL 0x3
#define SUBIDX_ADC_DMA_UNIT 0x4
#define SUBIDX_ADC_DMA_STREAM 0x5
#define SUBIDX_ADC_DMA_CHANNEL 0x6

/* End of autogenerated OD accessors */
#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif /* CO_IDENTIFICATORS_H */

